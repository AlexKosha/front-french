import {useEffect} from 'react';
import {useDispatch, useSelector} from 'react-redux';
import AsyncStorage from '@react-native-async-storage/async-storage';
import isEqual from 'lodash.isequal';

import {getProgress, addThunkProgress} from '../store/progress/progressThunk';
import {selectUserId} from '../store/auth/selector';
import {AppDispatch} from '../store/store';
import {selectProgressData} from '../store/progress/selector';

export const useSyncProgress = () => {
  const userId = useSelector(selectUserId);
  const progressData = useSelector(selectProgressData);
  const dispatch = useDispatch<AppDispatch>();

  useEffect(() => {
    const syncProgress = async () => {
      try {
        const jsonValue = await AsyncStorage.getItem('progress_all');
        const localData = jsonValue ? JSON.parse(jsonValue) : null;

        const localUserId = localData?.userId as string | undefined;
        const localProgress = localData?.progress;

        let backendProgress = null;

        // üîπ –Ø–∫—â–æ –≤ Redux –≤–∂–µ —î –ø—Ä–æ–≥—Ä–µ—Å ‚Äî –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î–º–æ –π–æ–≥–æ
        if (progressData && Object.keys(progressData).length > 0) {
          backendProgress = progressData;
        } else {
          // üîÑ –Ü–Ω–∞–∫—à–µ ‚Äî –æ—Ç—Ä–∏–º—É—î–º–æ –∑ –±–µ–∫–µ–Ω–¥—É
          const backendResponse = await dispatch(getProgress());
          if (getProgress.fulfilled.match(backendResponse)) {
            backendProgress = backendResponse.payload?.progress;
          }
        }

        if (!backendProgress) return;

        // ‚úÖ –Ø–∫—â–æ –Ω–µ–º–∞ –ª–æ–∫–∞–ª—å–Ω–∏—Ö –∞–±–æ userId –Ω–µ –∑–±—ñ–≥–∞—î—Ç—å—Å—è ‚Äî –æ–Ω–æ–≤–∏—Ç–∏ –ª–æ–∫–∞–ª—å–Ω—ñ
        if (!localData || localUserId !== userId) {
          await AsyncStorage.setItem(
            'progress_all',
            JSON.stringify({
              userId,
              progress: backendProgress,
            }),
          );
        }

        // üîÅ –Ø–∫—â–æ –ª–æ–∫–∞–ª—å–Ω—ñ –π –±–µ–∫–µ–Ω–¥–æ–≤—ñ –Ω–µ –∑–±—ñ–≥–∞—é—Ç—å—Å—è ‚Äî –Ω–∞–¥—ñ—Å–ª–∞—Ç–∏ –ª–æ–∫–∞–ª—å–Ω—ñ
        else if (
          backendProgress &&
          localProgress &&
          !isEqual(backendProgress, localProgress)
        ) {
          await dispatch(addThunkProgress({userId, progress: localProgress}));
        }
      } catch (error) {
        console.log('Error syncing progress:', error);
      }
    };

    if (userId) syncProgress();
  }, [userId, dispatch, progressData]);
};
